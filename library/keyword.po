# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Roustam Khamidoulline, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-21 14:55+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../library/keyword.rst:2
msgid ":mod:`!keyword` --- Testing for Python keywords"
msgstr ""

#: ../../library/keyword.rst:7
msgid "**Source code:** :source:`Lib/keyword.py`"
msgstr ""

#: ../../library/keyword.rst:11
msgid ""
"This module allows a Python program to determine if a string is a "
":ref:`keyword <keywords>` or :ref:`soft keyword <soft-keywords>`."
msgstr ""

#: ../../library/keyword.rst:17
msgid "Return ``True`` if *s* is a Python :ref:`keyword <keywords>`."
msgstr ""

#: ../../library/keyword.rst:22
msgid ""
"Sequence containing all the :ref:`keywords <keywords>` defined for the "
"interpreter.  If any keywords are defined to only be active when particular "
":mod:`__future__` statements are in effect, these will be included as well."
msgstr ""

#: ../../library/keyword.rst:29
msgid ""
"Return ``True`` if *s* is a Python :ref:`soft keyword <soft-keywords>`."
msgstr ""

#: ../../library/keyword.rst:36
msgid ""
"Sequence containing all the :ref:`soft keywords <soft-keywords>` defined for"
" the interpreter.  If any soft keywords are defined to only be active when "
"particular :mod:`__future__` statements are in effect, these will be "
"included as well."
msgstr ""
