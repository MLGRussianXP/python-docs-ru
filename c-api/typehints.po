# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Илья Панфилов, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-21 16:46+0000\n"
"PO-Revision-Date: 2021-06-17 06:42+0000\n"
"Last-Translator: Илья Панфилов, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../c-api/typehints.rst:6
msgid "Objects for Type Hinting"
msgstr ""

#: ../../c-api/typehints.rst:8
msgid ""
"Various built-in types for type hinting are provided. Only "
":ref:`GenericAlias <types-genericalias>` is exposed to C."
msgstr ""

#: ../../c-api/typehints.rst:13
msgid ""
"Create a :ref:`GenericAlias <types-genericalias>` object. Equivalent to "
"calling the Python class :class:`types.GenericAlias`.  The *origin* and "
"*args* arguments set the ``GenericAlias``\\ 's ``__origin__`` and "
"``__args__`` attributes respectively. *origin* should be a "
":c:type:`PyTypeObject*`, and *args* can be a :c:type:`PyTupleObject*` or any"
" ``PyObject*``.  If *args* passed is not a tuple, a 1-tuple is automatically"
" constructed and ``__args__`` is set to ``(args,)``. Minimal checking is "
"done for the arguments, so the function will succeed even if *origin* is not"
" a type. The ``GenericAlias``\\ 's ``__parameters__`` attribute is "
"constructed lazily from ``__args__``.  On failure, an exception is raised "
"and ``NULL`` is returned."
msgstr ""

#: ../../c-api/typehints.rst:27
msgid "Here's an example of how to make an extension type generic::"
msgstr ""

#: ../../c-api/typehints.rst:37
msgid "The data model method :meth:`__class_getitem__`."
msgstr ""

#: ../../c-api/typehints.rst:43
msgid ""
"The C type of the object returned by :c:func:`Py_GenericAlias`. Equivalent "
"to :class:`types.GenericAlias` in Python."
msgstr ""
