# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# decorator_factory <decorator-factory+transifex@yandex.ru>, 2021
# Daniil Kolesnikov, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-12 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Daniil Kolesnikov, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../tutorial/stdlib.rst:5
msgid "Brief Tour of the Standard Library"
msgstr "Краткий обзор стандартной библиотеки"

#: ../../tutorial/stdlib.rst:11
msgid "Operating System Interface"
msgstr "Интерфейс к операционной системе"

#: ../../tutorial/stdlib.rst:13
msgid ""
"The :mod:`os` module provides dozens of functions for interacting with the "
"operating system::"
msgstr ""
"Модуль :mod:`os` предоставляет десятки функций для взаимодействия с "
"операционной системой::"

#: ../../tutorial/stdlib.rst:23
msgid ""
"Be sure to use the ``import os`` style instead of ``from os import *``.  "
"This will keep :func:`os.open` from shadowing the built-in :func:`open` "
"function which operates much differently."
msgstr ""
"Импортируйте модуль как ``import os``, а не ``from os import *``, иначе "
"функция :func:`os.open` переопределит встроенную функцию :func:`open`, а они "
"работают по-разному."

#: ../../tutorial/stdlib.rst:29
msgid ""
"The built-in :func:`dir` and :func:`help` functions are useful as "
"interactive aids for working with large modules like :mod:`os`::"
msgstr ""
"Встроенные функции :func:`dir` и :func:`help` полезны при интерактивном "
"взаимодействии с большими модулями, в том числе с :mod:`os`::"

#: ../../tutorial/stdlib.rst:38
msgid ""
"For daily file and directory management tasks, the :mod:`shutil` module "
"provides a higher level interface that is easier to use::"
msgstr ""
"Модуль :mod:`shutils` предоставляет лёгкий в использовании высокоуровневый "
"интерфейс для ежедневных задач управления файлами и папками::"

#: ../../tutorial/stdlib.rst:51
msgid "File Wildcards"
msgstr "Шаблоны для имён файлов"

#: ../../tutorial/stdlib.rst:53
msgid ""
"The :mod:`glob` module provides a function for making file lists from "
"directory wildcard searches::"
msgstr ""
"Модуль :mod:`glob` предоставляет функцию для получения списка имён файлов по "
"указанному шаблону::"

#: ../../tutorial/stdlib.rst:64
msgid "Command Line Arguments"
msgstr "Аргументы командной строки"

#: ../../tutorial/stdlib.rst:66
msgid ""
"Common utility scripts often need to process command line arguments. These "
"arguments are stored in the :mod:`sys` module's *argv* attribute as a list.  "
"For instance, let's take the following :file:`demo.py` file::"
msgstr ""

#: ../../tutorial/stdlib.rst:74
msgid ""
"Here is the output from running ``python demo.py one two three`` at the "
"command line::"
msgstr ""
"Вот результат выполнения ``python demo.py one two three`` в командной "
"строке::"

#: ../../tutorial/stdlib.rst:79
msgid ""
"The :mod:`argparse` module provides a more sophisticated mechanism to "
"process command line arguments.  The following script extracts one or more "
"filenames and an optional number of lines to be displayed::"
msgstr ""
"Модуль :mod:`argparse` предоставляет более утончённый механизм обработки "
"аргументов командной строки. Следующий скрипт получает одно или более имя "
"файла и необязательное количество строк, которые нужно вывести::"

#: ../../tutorial/stdlib.rst:93
msgid ""
"When run at the command line with ``python top.py --lines=5 alpha.txt beta."
"txt``, the script sets ``args.lines`` to ``5`` and ``args.filenames`` to "
"``['alpha.txt', 'beta.txt']``."
msgstr ""
"При запуске из командной строки как ``python top.py --lines=5 alpha.txt beta."
"txt`` скрипт установит ``args.lines`` в 5, а ``args.filenames`` в ``['alpha."
"txt', 'beta.txt']``."

#: ../../tutorial/stdlib.rst:101
msgid "Error Output Redirection and Program Termination"
msgstr "Перенаправление вывода ошибок и завершение программы"

#: ../../tutorial/stdlib.rst:103
msgid ""
"The :mod:`sys` module also has attributes for *stdin*, *stdout*, and "
"*stderr*. The latter is useful for emitting warnings and error messages to "
"make them visible even when *stdout* has been redirected::"
msgstr ""
"Модуль :mod:`sys` содержит аттрибуты *stdin*, *stdout* и *stderr*. Последний "
"полезен для печати предупреждений и сообщений об ошибках, чтобы показать их "
"даже в тех случаях, когда *stdout* был перенаправлен::"

#: ../../tutorial/stdlib.rst:110
msgid "The most direct way to terminate a script is to use ``sys.exit()``."
msgstr "Самый простой способ завершить программу -- вызвать ``sys.exit()``."

#: ../../tutorial/stdlib.rst:116
msgid "String Pattern Matching"
msgstr "Сравнение строки с шаблоном"

#: ../../tutorial/stdlib.rst:118
msgid ""
"The :mod:`re` module provides regular expression tools for advanced string "
"processing. For complex matching and manipulation, regular expressions offer "
"succinct, optimized solutions::"
msgstr ""
"Модуль :mod:`re` предоставляет инструменты для работы с регулярными "
"выражениями для продвинутой обработки строк. Регулярные выражения "
"предоставляют краткие, оптимизированные решения для сложных манипуляций с "
"текстом::"

#: ../../tutorial/stdlib.rst:128
msgid ""
"When only simple capabilities are needed, string methods are preferred "
"because they are easier to read and debug::"
msgstr ""
"Если вам нужны только простые действия, методвы строк предпочтительней, "
"потому что их проще читать и отлаживать::"

#: ../../tutorial/stdlib.rst:138
msgid "Mathematics"
msgstr "Математика"

#: ../../tutorial/stdlib.rst:140
msgid ""
"The :mod:`math` module gives access to the underlying C library functions "
"for floating point math::"
msgstr ""
"Модуль :mod:`math` даёт доступ к функциям библиотеки C, работающим с числами "
"с плавающей точкой::"

#: ../../tutorial/stdlib.rst:149
msgid "The :mod:`random` module provides tools for making random selections::"
msgstr ""
"Модуль :mod:`random` предоставляет инструменты для создания случайных "
"выборок::"

#: ../../tutorial/stdlib.rst:161
msgid ""
"The :mod:`statistics` module calculates basic statistical properties (the "
"mean, median, variance, etc.) of numeric data::"
msgstr ""
"Модуль :mod:`statistics: позволяет вычислять базовые статистические величины "
"(среднее, медиану, стандартное отколнение и т. п.) для числовых данных::"

#: ../../tutorial/stdlib.rst:173
msgid ""
"The SciPy project <https://scipy.org> has many other modules for numerical "
"computations."
msgstr ""
"Проект SciPy <https://scipy.org> содержит большое количество других модулей "
"для численных вычислений."

#: ../../tutorial/stdlib.rst:179
msgid "Internet Access"
msgstr "Доступ в интернет"

#: ../../tutorial/stdlib.rst:181
msgid ""
"There are a number of modules for accessing the internet and processing "
"internet protocols. Two of the simplest are :mod:`urllib.request` for "
"retrieving data from URLs and :mod:`smtplib` for sending mail::"
msgstr ""
"Есть несколько модулей, предназначенных для доступа в интернет и работы с "
"его протоколами. Два самых простых модуля -- :mod:`urllib.request` для "
"получения данных по URL и :mod:`smtplib` для отправки электронной почты::"

#: ../../tutorial/stdlib.rst:204
msgid "(Note that the second example needs a mailserver running on localhost.)"
msgstr ""
"(Заметьте, что для второго примера на ``localhost`` должен быть запущен "
"почтовый сервер.)"

#: ../../tutorial/stdlib.rst:210
msgid "Dates and Times"
msgstr "Дата и время"

#: ../../tutorial/stdlib.rst:212
msgid ""
"The :mod:`datetime` module supplies classes for manipulating dates and times "
"in both simple and complex ways. While date and time arithmetic is "
"supported, the focus of the implementation is on efficient member extraction "
"for output formatting and manipulation.  The module also supports objects "
"that are timezone aware. ::"
msgstr ""
"Модуль :mod:`datetime` предоставляет классы для манипуляции датой и временем "
"простыми и сложными способами. Арифметика с датами и временем "
"поддерживается, но модуль уделяет больше внимания эффективному доступу к "
"полям для форматирования  и манипуляций. Модуль также поддерживает объекты с "
"информацией о временных зонах. ::"

#: ../../tutorial/stdlib.rst:236
msgid "Data Compression"
msgstr "Сжатие данных"

#: ../../tutorial/stdlib.rst:238
msgid ""
"Common data archiving and compression formats are directly supported by "
"modules including: :mod:`zlib`, :mod:`gzip`, :mod:`bz2`, :mod:`lzma`, :mod:"
"`zipfile` and :mod:`tarfile`. ::"
msgstr ""
"Популярные форматы архивирования и сжатия напрямую поддерживаются в "
"стандартной библиотеке, в том числе в модулях :mod:`zlib`, :mod:`gzip`, :mod:"
"`bz2`, :mod:`lzma`, :mod:`zipfile` и :mod:`tarfile`. ::"

#: ../../tutorial/stdlib.rst:258
msgid "Performance Measurement"
msgstr "Измерение производительности"

#: ../../tutorial/stdlib.rst:260
msgid ""
"Some Python users develop a deep interest in knowing the relative "
"performance of different approaches to the same problem. Python provides a "
"measurement tool that answers those questions immediately."
msgstr ""
"Некоторым разработчикам весьма интересно, какой из подходов к решению задачи "
"выигрывает по производительности. Python предоставляет инструмент для "
"удовлетворения такого любопытства."

#: ../../tutorial/stdlib.rst:264
msgid ""
"For example, it may be tempting to use the tuple packing and unpacking "
"feature instead of the traditional approach to swapping arguments. The :mod:"
"`timeit` module quickly demonstrates a modest performance advantage::"
msgstr ""
"Например, может быть заманчивым использовать распаковку и упаковку кортежей "
"вместо традиционного подхода к обмену значений между переменными. Модуль :"
"mod:`timeit` быстро показывает скромное преимущество в производительности::"

#: ../../tutorial/stdlib.rst:274
msgid ""
"In contrast to :mod:`timeit`'s fine level of granularity, the :mod:`profile` "
"and :mod:`pstats` modules provide tools for identifying time critical "
"sections in larger blocks of code."
msgstr ""
"В отличие от высокого уровня точности :mod:`timeit`, модули :mod:`profile` "
"и :mod:`pstats` предоставляют инструменты для нахождения самых "
"времязатратных участков в более крупных блоках кода."

#: ../../tutorial/stdlib.rst:282
msgid "Quality Control"
msgstr "Контроль качества"

#: ../../tutorial/stdlib.rst:284
msgid ""
"One approach for developing high quality software is to write tests for each "
"function as it is developed and to run those tests frequently during the "
"development process."
msgstr ""
"Один из подходов к разработке программного обеспечения высокого качества -- "
"писать тесты во время написания каждой функции и регулярно запускать их в "
"процессе разработки."

#: ../../tutorial/stdlib.rst:288
msgid ""
"The :mod:`doctest` module provides a tool for scanning a module and "
"validating tests embedded in a program's docstrings.  Test construction is "
"as simple as cutting-and-pasting a typical call along with its results into "
"the docstring. This improves the documentation by providing the user with an "
"example and it allows the doctest module to make sure the code remains true "
"to the documentation::"
msgstr ""
"Модуль :mod:`doctest` предоставляет инструмент для анализа модуля и "
"валидации тестов, встроенных в строки документации программы. Создать тест "
"просто: скопируйте и вставьте типичный пример вызова функции или класса и "
"его результат. Это улучшает документацию, показывая пользователю кода пример "
"того, как использовать сущность, и позволяет модулю :mod:`doctest` "
"убедиться, что код работает в соответствии с документацией::"

#: ../../tutorial/stdlib.rst:306
msgid ""
"The :mod:`unittest` module is not as effortless as the :mod:`doctest` "
"module, but it allows a more comprehensive set of tests to be maintained in "
"a separate file::"
msgstr ""
"Модуль :mod:`unittest` не так просто в использовании, как :mod:`doctest`, но "
"позволяет поддерживать более полный набор тестов в отдельном файле::"

#: ../../tutorial/stdlib.rst:328
msgid "Batteries Included"
msgstr "Батарейки прилагаются"

#: ../../tutorial/stdlib.rst:330
msgid ""
"Python has a \"batteries included\" philosophy.  This is best seen through "
"the sophisticated and robust capabilities of its larger packages. For "
"example:"
msgstr ""
"Python придерживается философии \"батарейки включены в "
"комплект\" (\"batteries included\"). Это можно заметить по нетривиальным и "
"крепким возможностям, которые предоставляет его стандартная библиотека. "
"Например:: "

#: ../../tutorial/stdlib.rst:333
msgid ""
"The :mod:`xmlrpc.client` and :mod:`xmlrpc.server` modules make implementing "
"remote procedure calls into an almost trivial task.  Despite the modules' "
"names, no direct knowledge or handling of XML is needed."
msgstr ""

#: ../../tutorial/stdlib.rst:337
msgid ""
"The :mod:`email` package is a library for managing email messages, including "
"MIME and other :rfc:`2822`-based message documents. Unlike :mod:`smtplib` "
"and :mod:`poplib` which actually send and receive messages, the email "
"package has a complete toolset for building or decoding complex message "
"structures (including attachments) and for implementing internet encoding "
"and header protocols."
msgstr ""
"Пакет :mod:`email` -- библиотека для управления сообщениями электронной "
"почты, включая MIME и другие документы сообщений, основанные на :rfc:`2822`. "
"В отличие от модулей :mod:`smtplib` и :mod:`poplib`, которые предназначены "
"именно для отправки и получения сообщений, в пакете *email* содержится набор "
"инструментов для создания и анализа сообщений со сложной структурой "
"(например сообщений с вложениями) и и имплементации протоколов кодировки и "
"заголовков."

#: ../../tutorial/stdlib.rst:344
msgid ""
"The :mod:`json` package provides robust support for parsing this popular "
"data interchange format.  The :mod:`csv` module supports direct reading and "
"writing of files in Comma-Separated Value format, commonly supported by "
"databases and spreadsheets.  XML processing is supported by the :mod:`xml."
"etree.ElementTree`, :mod:`xml.dom` and :mod:`xml.sax` packages. Together, "
"these modules and packages greatly simplify data interchange between Python "
"applications and other tools."
msgstr ""
"Пакет :mod:`json` предоставляет поддержку сериализации и десериализации "
"данных в этом популярном формате. Модуль :mod:`csv` поддерживает прямые "
"чтение и запись файлов в формате CSV (Comma-Separated Value), который часто "
"поддерживают базы данных и электронные таблицы. Обработка XML осуществляется "
"пакетами :mod:`xml.etree.ElementTree`, :mod:`xml.dom` и :mod:`xml.sax`. В "
"совокупности все эти модули и пакеты значительно упрощают обмен данными "
"между приложениями, написанными на Python, и другими инструментами."

#: ../../tutorial/stdlib.rst:353
msgid ""
"The :mod:`sqlite3` module is a wrapper for the SQLite database library, "
"providing a persistent database that can be updated and accessed using "
"slightly nonstandard SQL syntax."
msgstr ""
"Модуль :mod:`sqlite3` -- обёртка над библиотекой для работы с базами данных "
"SQLite. Она предоставляет сохраняемую базу данных, с которой можно "
"взаимодействовать, используя немного нестандартный вариант языка SQL. "

#: ../../tutorial/stdlib.rst:357
msgid ""
"Internationalization is supported by a number of modules including :mod:"
"`gettext`, :mod:`locale`, and the :mod:`codecs` package."
msgstr ""
"Интернационализация поддерживается несколькими модулями, включая :mod:"
"`gettext`, :mod:`locale` и пакетом :mod:`codecs`."

#: ../../tutorial/stdlib.rst:27
msgid "built-in function"
msgstr "встроенная функция"

#: ../../tutorial/stdlib.rst:27
msgid "help"
msgstr "помощь"
