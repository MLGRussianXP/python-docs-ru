# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Pavel Karateev <lancelote.du.lac@gmail.com>, 2021
# alex alev <alex.alev@bk.ru>, 2021
# impo code, 2022
# Daniil Kolesnikov, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-12 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Daniil Kolesnikov, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../tutorial/interpreter.rst:5
msgid "Using the Python Interpreter"
msgstr "Использование интерпретатора Python"

#: ../../tutorial/interpreter.rst:11
msgid "Invoking the Interpreter"
msgstr "Запуск интерпретатора"

#: ../../tutorial/interpreter.rst:13
msgid ""
"The Python interpreter is usually installed as :file:`/usr/local/bin/"
"python3.12` on those machines where it is available; putting :file:`/usr/"
"local/bin` in your Unix shell's search path makes it possible to start it by "
"typing the command:"
msgstr ""
"Интерпретатор Python обычно устанавливается как :file:`/usr/local/bin/"
"python3.12` на тех машинах, где он доступен; добавление :file:`/usr/local/"
"bin` в путь поиска вашей командной оболочки Unix позволяет запустить его, "
"написав команду:"

#: ../../tutorial/interpreter.rst:21
msgid ""
"to the shell. [#]_ Since the choice of the directory where the interpreter "
"lives is an installation option, other places are possible; check with your "
"local Python guru or system administrator.  (E.g., :file:`/usr/local/python` "
"is a popular alternative location.)"
msgstr ""
"в командную оболочку. [#]_ Поскольку выбор каталога, где находится "
"интерпретатор, является опциональным, возможны и другие места; уточните у "
"своего местного гуру по Python или системного администратора. (Например, :"
"file:`/usr/local/python` - популярное альтернативное место.)"

#: ../../tutorial/interpreter.rst:26
msgid ""
"On Windows machines where you have installed Python from the :ref:`Microsoft "
"Store <windows-store>`, the :file:`python3.12` command will be available. If "
"you have the :ref:`py.exe launcher <launcher>` installed, you can use the :"
"file:`py` command. See :ref:`setting-envvars` for other ways to launch "
"Python."
msgstr ""
"На Windows-машинах, где вы установили Python из :ref:`Microsoft Store "
"<windows-store>`, будет доступна команда :file:`python3.12`. Если у вас "
"установлен :ref:`py.exe launcher <launcher>`, вы можете использовать "
"команду :file:`py`. См. :ref:`setting-envvars` для других способов запуска "
"Python."

#: ../../tutorial/interpreter.rst:31
msgid ""
"Typing an end-of-file character (:kbd:`Control-D` on Unix, :kbd:`Control-Z` "
"on Windows) at the primary prompt causes the interpreter to exit with a zero "
"exit status.  If that doesn't work, you can exit the interpreter by typing "
"the following command: ``quit()``."
msgstr ""
"Ввод символа конца файла (:kbd:`Control-D` в Unix, :kbd:`Control-Z` в "
"Windows) в основном запросе заставляет интерпретатор завершиться с нулевым "
"кодом завершения. Если это не работает, вы можете выйти из интерпретатора, "
"набрав следующую команду: ``quit()``."

#: ../../tutorial/interpreter.rst:36
msgid ""
"The interpreter's line-editing features include interactive editing, history "
"substitution and code completion on systems that support the `GNU Readline "
"<https://tiswww.case.edu/php/chet/readline/rltop.html>`_ library. Perhaps "
"the quickest check to see whether command line editing is supported is "
"typing :kbd:`Control-P` to the first Python prompt you get.  If it beeps, "
"you have command line editing; see Appendix :ref:`tut-interacting` for an "
"introduction to the keys.  If nothing appears to happen, or if ``^P`` is "
"echoed, command line editing isn't available; you'll only be able to use "
"backspace to remove characters from the current line."
msgstr ""
"Возможности интерпретатора по редактированию строк включают интерактивное "
"редактирование, подстановку истории и завершение кода на системах, "
"поддерживающих библиотеку `GNU Readline <https://tiswww.case.edu/php/chet/"
"readline/rltop.html>`_. Возможно, самой быстрой проверкой того, "
"поддерживается ли редактирование командной строки, является ввод :kbd:"
"`Control-P` в первом появившемся запросе Python. Если он подаст звуковой "
"сигнал, значит, у вас есть редактирование командной строки; введение в "
"клавиши см. в приложении :ref:`tut-interacting`. Если ничего не происходит "
"или эхом выводится ``^P``, значит, редактирование командной строки "
"недоступно; вы сможете использовать backspace только для удаления символов "
"из текущей строки."

#: ../../tutorial/interpreter.rst:46
msgid ""
"The interpreter operates somewhat like the Unix shell: when called with "
"standard input connected to a tty device, it reads and executes commands "
"interactively; when called with a file name argument or with a file as "
"standard input, it reads and executes a *script* from that file."
msgstr ""
"Интерпретатор работает примерно так же, как оболочка Unix: при вызове со "
"стандартным вводом, подключенным к tty-устройству, он считывает и выполняет "
"команды в интерактивном режиме; при вызове с аргументом имени файла или с "
"файлом в качестве стандартного ввода она читает и выполняет *скрипт* из "
"этого файла."

#: ../../tutorial/interpreter.rst:51
msgid ""
"A second way of starting the interpreter is ``python -c command [arg] ...``, "
"which executes the statement(s) in *command*, analogous to the shell's :"
"option:`-c` option.  Since Python statements often contain spaces or other "
"characters that are special to the shell, it is usually advised to quote "
"*command* in its entirety."
msgstr ""

#: ../../tutorial/interpreter.rst:57
msgid ""
"Some Python modules are also useful as scripts.  These can be invoked using "
"``python -m module [arg] ...``, which executes the source file for *module* "
"as if you had spelled out its full name on the command line."
msgstr ""

#: ../../tutorial/interpreter.rst:61
msgid ""
"When a script file is used, it is sometimes useful to be able to run the "
"script and enter interactive mode afterwards.  This can be done by passing :"
"option:`-i` before the script."
msgstr ""

#: ../../tutorial/interpreter.rst:65
msgid "All command line options are described in :ref:`using-on-general`."
msgstr ""

#: ../../tutorial/interpreter.rst:71
msgid "Argument Passing"
msgstr ""

#: ../../tutorial/interpreter.rst:73
msgid ""
"When known to the interpreter, the script name and additional arguments "
"thereafter are turned into a list of strings and assigned to the ``argv`` "
"variable in the ``sys`` module.  You can access this list by executing "
"``import sys``.  The length of the list is at least one; when no script and "
"no arguments are given, ``sys.argv[0]`` is an empty string.  When the script "
"name is given as ``'-'`` (meaning  standard input), ``sys.argv[0]`` is set "
"to ``'-'``.  When :option:`-c` *command* is used, ``sys.argv[0]`` is set to "
"``'-c'``.  When :option:`-m` *module* is used, ``sys.argv[0]``  is set to "
"the full name of the located module.  Options found after  :option:`-c` "
"*command* or :option:`-m` *module* are not consumed  by the Python "
"interpreter's option processing but left in ``sys.argv`` for  the command or "
"module to handle."
msgstr ""

#: ../../tutorial/interpreter.rst:89
msgid "Interactive Mode"
msgstr "Интерактивный режим"

#: ../../tutorial/interpreter.rst:91
msgid ""
"When commands are read from a tty, the interpreter is said to be in "
"*interactive mode*.  In this mode it prompts for the next command with the "
"*primary prompt*, usually three greater-than signs (``>>>``); for "
"continuation lines it prompts with the *secondary prompt*, by default three "
"dots (``...``). The interpreter prints a welcome message stating its version "
"number and a copyright notice before printing the first prompt:"
msgstr ""

#: ../../tutorial/interpreter.rst:108
msgid ""
"Continuation lines are needed when entering a multi-line construct. As an "
"example, take a look at this :keyword:`if` statement::"
msgstr ""

#: ../../tutorial/interpreter.rst:118
msgid "For more on interactive mode, see :ref:`tut-interac`."
msgstr ""

#: ../../tutorial/interpreter.rst:124
msgid "The Interpreter and Its Environment"
msgstr ""

#: ../../tutorial/interpreter.rst:130
msgid "Source Code Encoding"
msgstr ""

#: ../../tutorial/interpreter.rst:132
msgid ""
"By default, Python source files are treated as encoded in UTF-8.  In that "
"encoding, characters of most languages in the world can be used "
"simultaneously in string literals, identifiers and comments --- although the "
"standard library only uses ASCII characters for identifiers, a convention "
"that any portable code should follow.  To display all these characters "
"properly, your editor must recognize that the file is UTF-8, and it must use "
"a font that supports all the characters in the file."
msgstr ""

#: ../../tutorial/interpreter.rst:140
msgid ""
"To declare an encoding other than the default one, a special comment line "
"should be added as the *first* line of the file.  The syntax is as follows::"
msgstr ""

#: ../../tutorial/interpreter.rst:145
msgid "where *encoding* is one of the valid :mod:`codecs` supported by Python."
msgstr ""

#: ../../tutorial/interpreter.rst:147
msgid ""
"For example, to declare that Windows-1252 encoding is to be used, the first "
"line of your source code file should be::"
msgstr ""

#: ../../tutorial/interpreter.rst:152
msgid ""
"One exception to the *first line* rule is when the source code starts with "
"a :ref:`UNIX \"shebang\" line <tut-scripts>`.  In this case, the encoding "
"declaration should be added as the second line of the file.  For example::"
msgstr ""

#: ../../tutorial/interpreter.rst:160
msgid "Footnotes"
msgstr "Сноски"

#: ../../tutorial/interpreter.rst:161
msgid ""
"On Unix, the Python 3.x interpreter is by default not installed with the "
"executable named ``python``, so that it does not conflict with a "
"simultaneously installed Python 2.x executable."
msgstr ""
