# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Kristina Mironova, 2021
# impo code, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-22 14:13+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: impo code, 2022\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../tutorial/index.rst:5
msgid "The Python Tutorial"
msgstr "Учебник Python "

#: ../../tutorial/index.rst:7
msgid ""
"Python is an easy to learn, powerful programming language. It has efficient "
"high-level data structures and a simple but effective approach to object-"
"oriented programming. Python's elegant syntax and dynamic typing, together "
"with its interpreted nature, make it an ideal language for scripting and "
"rapid application development in many areas on most platforms."
msgstr ""
"Python - простой для изучения, мощный язык программирования.  Он имеет "
"эффективные высокоуровневые структуры данных  и простой, но эффективный "
"подход к объектно-ориентированному программированию. Элегантный синтаксис "
"языка Python и динамическая типизация вместе со встроенным интерпретатором, "
"делают его идеальным языком для написания сценариев и быстрой разработки "
"приложений во многих областях на большинстве платформ."

#: ../../tutorial/index.rst:13
msgid ""
"The Python interpreter and the extensive standard library are freely "
"available in source or binary form for all major platforms from the Python "
"web site, https://www.python.org/, and may be freely distributed. The same "
"site also contains distributions of and pointers to many free third party "
"Python modules, programs and tools, and additional documentation."
msgstr ""
"Интерпретатор Python и обширная стандартная библиотека свободно доступны в "
"исходном или бинарном виде для всех основных платформ на веб-сайте Python, "
"https://www.python.org/, и могут свободно распространяться. Этот же сайт "
"также содержит дистрибутивы и указатели на многие бесплатные сторонние "
"модули Python, программы и инструменты, а также дополнительную документацию."

#: ../../tutorial/index.rst:19
msgid ""
"The Python interpreter is easily extended with new functions and data types "
"implemented in C or C++ (or other languages callable from C). Python is also "
"suitable as an extension language for customizable applications."
msgstr ""
"Интерпретатор Python легко расширяется новыми функциями и типами данных, "
"реализованными на C или C++ (или других языках, вызываемых из C). Python "
"также подходит в качестве языка расширения для настраиваемых приложений."

#: ../../tutorial/index.rst:23
msgid ""
"This tutorial introduces the reader informally to the basic concepts and "
"features of the Python language and system. It helps to have a Python "
"interpreter handy for hands-on experience, but all examples are self-"
"contained, so the tutorial can be read off-line as well."
msgstr ""
"Этот учебник неформально знакомит читателя с основными понятиями и функциями "
"языка и системы Python. Желательно иметь под рукой интерпретатор Python для "
"экспериментов, в то же время  все примеры являются самостоятельными, таким "
"образом учебник можно читать и в автономном режиме."

#: ../../tutorial/index.rst:28
msgid ""
"For a description of standard objects and modules, see :ref:`library-"
"index`. :ref:`reference-index` gives a more formal definition of the "
"language.  To write extensions in C or C++, read :ref:`extending-index` and :"
"ref:`c-api-index`. There are also several books covering Python in depth."
msgstr ""
"Описание стандартных объектов и модулей смотрите :ref:`library-index`. :ref:"
"`reference-index` дает больше формальных определений языка. Для написания "
"расширений на C или C++, читайте  :ref:`extending-index` и :ref:`c-api-"
"index`. Есть также несколько книг для более глубокого изучения Python."

#: ../../tutorial/index.rst:33
msgid ""
"This tutorial does not attempt to be comprehensive and cover every single "
"feature, or even every commonly used feature. Instead, it introduces many of "
"Python's most noteworthy features, and will give you a good idea of the "
"language's flavor and style. After reading it, you will be able to read and "
"write Python modules and programs, and you will be ready to learn more about "
"the various Python library modules described in :ref:`library-index`."
msgstr ""
"Этот учебник не претендует на то, чтобы быть исчерпывающим и охватывать "
"каждую отдельную функцию или даже каждую часто используемую функцию. Вместо "
"этого он знакомит вас со многими наиболее примечательными возможностями "
"Python и дает вам хорошее представление об особенностях и стиле языка. "
"Прочитав его, вы сможете читать и писать модули и программы Python, а также "
"будете готовы узнать больше о различных модулях библиотеки Python, описанных "
"в :ref:`library-index`."

#: ../../tutorial/index.rst:40
msgid "The :ref:`glossary` is also worth going through."
msgstr ":ref:`glossary` также стоит того, чтобы туда заглянуть."
