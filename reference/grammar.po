# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-22 14:13+0000\n"
"PO-Revision-Date: 2021-06-28 01:49+0000\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../reference/grammar.rst:4
msgid "Full Grammar specification"
msgstr ""

#: ../../reference/grammar.rst:6
msgid ""
"This is the full Python grammar, derived directly from the grammar used to "
"generate the CPython parser (see :source:`Grammar/python.gram`). The version "
"here omits details related to code generation and error recovery."
msgstr ""

#: ../../reference/grammar.rst:11
msgid ""
"The notation is a mixture of `EBNF <https://en.wikipedia.org/wiki/"
"Extended_Backus%E2%80%93Naur_form>`_ and `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_. In particular, ``&`` followed by a symbol, "
"token or parenthesized group indicates a positive lookahead (i.e., is "
"required to match but not consumed), while ``!`` indicates a negative "
"lookahead (i.e., is required *not* to match).  We use the ``|`` separator to "
"mean PEG's \"ordered choice\" (written as ``/`` in traditional PEG "
"grammars). See :pep:`617` for more details on the grammar's syntax."
msgstr ""
